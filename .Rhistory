ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
ylim(c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall)+100)) +
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(1,1)) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
ylim(c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall)+100)) +
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.1,0.1)) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
ylim(c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall)+100)) +
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.001,0.001)) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
ylim(c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall)+100)) +
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.01,0.01)) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
ylim(c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall)+100)) +
#use expand in scale param to remove annoying scale padding
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.01,0.01)) +
scale_y_continuous(expand = c(0.01,0.01)) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
#use expand in scale param to remove annoying scale padding
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.01,0.01)) +
scale_y_continuous(expand = c(0.01,0.01)) +
ylim(c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall)+100)) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
#use expand in scale param to remove annoying scale padding
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.01,0.01)) +
scale_y_continuous(expand = c(0.01,0.01), limits = c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall))) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
print('hi')
suppressMessages(library(data.table))
suppressMessages(library(tidyverse))
NOAA_data <- fread("airport_data/3184544.csv")
NOAA_data
NOAA_data %>% summary
NOAA_data %>%
filter(!is.na(SNWD))
NOAA_data %>%
filter(!is.na(SNWD)) %>%
select(!ends_with("_ATTRIBUTES"))
NOAA_data <- fread("airport_data/3184544.csv")
#filter for usability
#turns out the data attributes are useless lol
NOAA_data <- NOAA_data %>% select(!ends_with("_ATTRIBUTES"))
NOAA_data %>% summary
NOAA_data %>%
filter(!is.na(SNWD)) %>%
select(!ends_with("_ATTRIBUTES")) %>%
which()
NOAA_data %>%
filter(!is.na(SNWD)) %>%
select(!ends_with("_ATTRIBUTES"))
NOAA_data %>% filter(DATE == as.Date("1999-09-27"))
NOAA_data %>% filter(DATE == as.Date("1999-09-26"))
NOAA_data <- fread("airport_data/3184544.csv")
#filter for usability
#turns out the data attributes are useless lol
NOAA_data <- NOAA_data %>% select(!ends_with("_ATTRIBUTES"))
#remove nan rainfall rows, no rainfall is represented by 0,
NOAA_data %>% head(2)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
suppressMessages(library(data.table))
suppressMessages(library(tidyverse))
suppressMessages(library(splines))
suppressMessages(library(ggdark))
suppressMessages(library(patchwork))
require(gridExtra)
NOAA_data <- fread("airport_data/3184544.csv")
#filter for usability
#turns out the data attributes are useless lol
NOAA_data <- NOAA_data %>% select(!ends_with("_ATTRIBUTES"))
NOAA_data %>% head(2)
#boolean for whether it rained at all
rain <- rain %>%
mutate(did_rain = `Rainfall amount (millimetres)` > 0)
rainy_days <- rain %>%
group_by(Month, Day) %>%
summarise(
number_of_rainy_days = sum(did_rain), days_observed = n()
) %>%
mutate(proportion_rained = number_of_rainy_days/days_observed)
rainy_days$index <- 1:length(rainy_days$Day)
rainy_days <- rainy_days %>%
mutate(date_str = str_c(Day, Month, sep = "/"))
custom_breaks = c(
1,32,32+29,32+29+31,92+30,153,153+30,214,245,275,306,336,366
)
rainy_days %>%
ggplot(aes(index, proportion_rained*100)) +
geom_point() +
geom_smooth(span=0.5) +
scale_y_continuous(breaks = seq(0,1,0.1)*100) +
ylab("Percentage of days with any rain") +
xlab("Date") +
scale_x_continuous(
breaks = custom_breaks, labels = rainy_days$date_str[custom_breaks]
) +
ggtitle("Should you plan to go outside? Percent chance of any rain for Perth Airport") +
dark_theme_classic()
rainfall_totals_yearly <- rain %>%
filter(Year != 2022) %>%
group_by(Year) %>% summarise(total.Yearly.Rainfall = sum(`Rainfall amount (millimetres)`))
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
#use expand in scale param to remove annoying scale padding
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.01,0.01)) +
scale_y_continuous(
expand = c(0.01,0.01),
limits = c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall))
) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
#to use our intercept we set 1944 to be "year zero"
base_year = 1944
rainfall_totals_yearly <- rainfall_totals_yearly %>% mutate(Year_zeroed = Year-base_year)
rainfall_model_lm <- lm("total.Yearly.Rainfall ~ Year_zeroed" , data = rainfall_totals_yearly)
broom::tidy(summary(rainfall_model_lm))
Years = c(1950, 1970, 2020, 2040, 2080, 2100, 2200)
df <- broom::tidy(predict(
rainfall_model_lm, list(
Year_zeroed=Years-base_year
)
))
df$Year <- Years
df$Predicted_Rainfall <- df$x
df <- merge(df, rainfall_totals_yearly %>%
filter(Year %in% Years) %>% select(Year, total.Yearly.Rainfall) %>%
rename(Actual_rainfall = total.Yearly.Rainfall),
all.x = TRUE)
df %>%
select(Year, Predicted_Rainfall, Actual_rainfall) %>%
mutate(Difference = Actual_rainfall - Predicted_Rainfall)
min_year = rain$Year %>% min
max_year = rain$Year %>% max
rainfall_totals <- rain %>%
group_by(Year, Month) %>%
summarise(total_rainfall = sum(`Rainfall amount (millimetres)`))
allmonths <- rainfall_totals %>%
filter(Year != 1944, Year != 2022) %>%
ggplot(aes(Year, total_rainfall)) +
facet_grid(cols=vars(Month)) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", colour = "red") +
scale_x_continuous(breaks = c(min_year+1, max_year-1)) +
ggtitle("Perth rainfall monthly totals for each month between 1945 and 2021") +
dark_theme_classic() +
theme(axis.text.x=element_text(angle=60,hjust=1))
winter <- rainfall_totals %>%
filter(Year != 1944, Year != 2022, Month %in% 6:8) %>%
ggplot(aes(Year, total_rainfall)) +
facet_grid(cols=vars(Month)) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", colour = "red") +
scale_x_continuous(breaks = c(min_year+1, max_year-1)) +
ggtitle("Winter Months") +
dark_theme_classic() +
theme(axis.text.x=element_text(angle=60,hjust=1))
summer <- rainfall_totals %>%
filter(Year != 1944, Year != 2022, Month %in% c(1:2,12)) %>%
ggplot(aes(Year, total_rainfall)) +
facet_grid(cols=vars(Month)) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", colour = "red") +
scale_x_continuous(breaks = c(min_year+1, max_year-1)) +
ggtitle("Summer months") +
dark_theme_classic() +
theme(axis.text.x=element_text(angle=60,hjust=1))
allmonths/(winter | summer)
models.year_vs_rainfall_per_month <- rainfall_totals %>%
mutate(Year = Year - base_year) %>%
group_by(Month) %>%
group_modify(~ broom::tidy(lm(total_rainfall ~ Year, data = .)))
models.year_vs_rainfall_per_month %>%
mutate(nominal_significant = p.value < 0.05) %>%
mutate(passes_bonferroni = p.value < 0.05/12)
models.year_vs_rainfall_per_month %>%
filter(term == "Year") %>%
ggplot(aes(Month, estimate, ymin=estimate-std.error, ymax=estimate+std.error, colour = -log10(p.value))) +
dark_theme_classic() +
geom_point() +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
ggtitle("Estimated change in average total monthly rainfall per year") +
ylab("estimated change rainfall (mm)") +
scale_x_continuous(breaks = 1:12)
rainfall_totals <- rainfall_totals %>%
mutate(Year_zeroed = Year - base_year) %>%
mutate(Month_reparam = abs(Month-6))
year.by.month.model <- lm(total_rainfall ~ Year_zeroed*Month_reparam, data=rainfall_totals)
broom::tidy(summary(year.by.month.model))
#values for text explanation
#
rainfall_totals_may_june_higher <- rainfall_totals %>%
filter(Month == 5 | Month == 6) %>%
#cols become Year june july
select(Year, Month, total_rainfall) %>%
pivot_wider(names_from = c(Month), values_from = total_rainfall) %>%
mutate(higher_rain = case_when(
`5` > `6` ~ "June",
`6` > `5` ~ "July",
)) %>%
mutate(higher_rain_ordinal = case_when(
higher_rain == "May" ~ 0,
higher_rain == "June" ~ 1
)) %>%
mutate(delta = `6` - `5`)
rainfall_totals_may_june_higher %>%
ggplot(aes(Year, delta)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
geom_smooth(method="glm") +
ggtitle("Difference in total rainfall in June compared to May\n(Perth Airport, BOM data)") +
ylab("Difference (mm)") +
dark_theme_bw() +
ylim(-400,400) +
annotate("text", label = "June", x = 1980, y = 300, size = 8) +
annotate("text", label = "May", x = 1980, y = -300, size = 8)
rainfall_totals_june_july_higher <- rainfall_totals %>%
filter(Month > 5, Month < 8) %>%
#cols become Year june july
select(Year, Month, total_rainfall) %>%
pivot_wider(names_from = c(Month), values_from = total_rainfall) %>%
mutate(higher_rain = case_when(
`6` > `7` ~ "June",
`7` > `6` ~ "July",
)) %>%
mutate(higher_rain_ordinal = case_when(
higher_rain == "June" ~ 0,
higher_rain == "July" ~ 1
)) %>%
mutate(delta = `7` - `6`)
rainfall_totals_june_july_higher %>%
ggplot(aes(Year, delta)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
geom_smooth(method="glm") +
ggtitle("Difference in total rainfall in July compared to June\n(Perth Airport, BOM data)") +
ylab("Difference (mm)") +
dark_theme_bw() +
ylim(-400,400) +
annotate("text", label = "July", x = 1980, y = 300, size = 8) +
annotate("text", label = "June", x = 1980, y = -300, size = 8)
rainfall_totals_july_august_higher <- rainfall_totals %>%
filter(Month == 7 | Month == 8) %>%
#cols become Year june july
select(Year, Month, total_rainfall) %>%
pivot_wider(names_from = c(Month), values_from = total_rainfall) %>%
mutate(higher_rain = case_when(
`7` > `8` ~ "July",
`8` > `7` ~ "August"
)) %>%
mutate(higher_rain_ordinal = case_when(
higher_rain == "July" ~ 0,
higher_rain == "August" ~ 1
)) %>%
mutate(delta = `8` - `7`)
rainfall_totals_july_august_higher %>%
ggplot(aes(Year, delta)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
geom_smooth(method="glm") +
ggtitle("Difference in total rainfall in August compared to July\n(Perth Airport, BOM data)") +
ylab("Difference (mm)") +
dark_theme_bw() +
ylim(-400,400) +
annotate("text", label = "August", x = 1980, y = 300, size = 8) +
annotate("text", label = "July", x = 1980, y = -300, size = 8)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
suppressMessages(library(data.table))
suppressMessages(library(tidyverse))
suppressMessages(library(splines))
suppressMessages(library(ggdark))
suppressMessages(library(patchwork))
require(gridExtra)
NOAA_data <- fread("airport_data/3184544.csv")
#filter for usability
#turns out the data attributes are useless lol
NOAA_data <- NOAA_data %>% select(!ends_with("_ATTRIBUTES"))
NOAA_data %>% head(2)
#boolean for whether it rained at all
rain <- rain %>%
mutate(did_rain = `Rainfall amount (millimetres)` > 0)
rainy_days <- rain %>%
group_by(Month, Day) %>%
summarise(
number_of_rainy_days = sum(did_rain), days_observed = n()
) %>%
mutate(proportion_rained = number_of_rainy_days/days_observed)
rainy_days$index <- 1:length(rainy_days$Day)
rainy_days <- rainy_days %>%
mutate(date_str = str_c(Day, Month, sep = "/"))
custom_breaks = c(
1,32,32+29,32+29+31,92+30,153,153+30,214,245,275,306,336,366
)
rainy_days %>%
ggplot(aes(index, proportion_rained*100)) +
geom_point() +
geom_smooth(span=0.5) +
scale_y_continuous(breaks = seq(0,1,0.1)*100) +
ylab("Percentage of days with any rain") +
xlab("Date") +
scale_x_continuous(
breaks = custom_breaks, labels = rainy_days$date_str[custom_breaks]
) +
ggtitle("Should you plan to go outside? Percent chance of any rain for Perth Airport") +
dark_theme_classic()
rainfall_totals_yearly <- rain %>%
filter(Year != 2022) %>%
group_by(Year) %>% summarise(total.Yearly.Rainfall = sum(`Rainfall amount (millimetres)`))
rainfall_totals_yearly %>%
ggplot(aes(Year, total.Yearly.Rainfall)) +
geom_point() +
geom_smooth(method="lm") +
#use expand in scale param to remove annoying scale padding
scale_x_continuous(breaks = c(1945,1960,1980,2000,2020), expand = c(0.01,0.01)) +
scale_y_continuous(
expand = c(0.01,0.01),
limits = c(0,max(rainfall_totals_yearly$total.Yearly.Rainfall))
) +
ggtitle("Total yearly rainfall for Perth Airport (1945 to 2022)") +
dark_theme_classic()
#to use our intercept we set 1944 to be "year zero"
base_year = 1944
rainfall_totals_yearly <- rainfall_totals_yearly %>% mutate(Year_zeroed = Year-base_year)
rainfall_model_lm <- lm("total.Yearly.Rainfall ~ Year_zeroed" , data = rainfall_totals_yearly)
broom::tidy(summary(rainfall_model_lm))
Years = c(1950, 1970, 2020, 2040, 2080, 2100, 2200)
df <- broom::tidy(predict(
rainfall_model_lm, list(
Year_zeroed=Years-base_year
)
))
df$Year <- Years
df$Predicted_Rainfall <- df$x
df <- merge(df, rainfall_totals_yearly %>%
filter(Year %in% Years) %>% select(Year, total.Yearly.Rainfall) %>%
rename(Actual_rainfall = total.Yearly.Rainfall),
all.x = TRUE)
df %>%
select(Year, Predicted_Rainfall, Actual_rainfall) %>%
mutate(Difference = Actual_rainfall - Predicted_Rainfall)
min_year = rain$Year %>% min
max_year = rain$Year %>% max
rainfall_totals <- rain %>%
group_by(Year, Month) %>%
summarise(total_rainfall = sum(`Rainfall amount (millimetres)`))
allmonths <- rainfall_totals %>%
filter(Year != 1944, Year != 2022) %>%
ggplot(aes(Year, total_rainfall)) +
facet_grid(cols=vars(Month)) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", colour = "red") +
scale_x_continuous(breaks = c(min_year+1, max_year-1)) +
ggtitle("Perth rainfall monthly totals for each month between 1945 and 2021") +
dark_theme_classic() +
theme(axis.text.x=element_text(angle=60,hjust=1))
winter <- rainfall_totals %>%
filter(Year != 1944, Year != 2022, Month %in% 6:8) %>%
ggplot(aes(Year, total_rainfall)) +
facet_grid(cols=vars(Month)) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", colour = "red") +
scale_x_continuous(breaks = c(min_year+1, max_year-1)) +
ggtitle("Winter Months") +
dark_theme_classic() +
theme(axis.text.x=element_text(angle=60,hjust=1))
summer <- rainfall_totals %>%
filter(Year != 1944, Year != 2022, Month %in% c(1:2,12)) %>%
ggplot(aes(Year, total_rainfall)) +
facet_grid(cols=vars(Month)) +
geom_point(alpha = 0.5) +
geom_smooth(method="lm", colour = "red") +
scale_x_continuous(breaks = c(min_year+1, max_year-1)) +
ggtitle("Summer months") +
dark_theme_classic() +
theme(axis.text.x=element_text(angle=60,hjust=1))
allmonths/(winter | summer)
models.year_vs_rainfall_per_month <- rainfall_totals %>%
mutate(Year = Year - base_year) %>%
group_by(Month) %>%
group_modify(~ broom::tidy(lm(total_rainfall ~ Year, data = .)))
models.year_vs_rainfall_per_month %>%
mutate(nominal_significant = p.value < 0.05) %>%
mutate(passes_bonferroni = p.value < 0.05/12)
models.year_vs_rainfall_per_month %>%
filter(term == "Year") %>%
ggplot(aes(Month, estimate, ymin=estimate-std.error, ymax=estimate+std.error, colour = -log10(p.value))) +
dark_theme_classic() +
geom_point() +
geom_pointrange() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
ggtitle("Estimated change in average total monthly rainfall per year") +
ylab("estimated change rainfall (mm)") +
scale_x_continuous(breaks = 1:12)
rainfall_totals <- rainfall_totals %>%
mutate(Year_zeroed = Year - base_year) %>%
mutate(Month_reparam = abs(Month-6))
year.by.month.model <- lm(total_rainfall ~ Year_zeroed*Month_reparam, data=rainfall_totals)
broom::tidy(summary(year.by.month.model))
#values for text explanation
#
rainfall_totals_may_june_higher <- rainfall_totals %>%
filter(Month == 5 | Month == 6) %>%
#cols become Year june july
select(Year, Month, total_rainfall) %>%
pivot_wider(names_from = c(Month), values_from = total_rainfall) %>%
mutate(higher_rain = case_when(
`5` > `6` ~ "June",
`6` > `5` ~ "July",
)) %>%
mutate(higher_rain_ordinal = case_when(
higher_rain == "May" ~ 0,
higher_rain == "June" ~ 1
)) %>%
mutate(delta = `6` - `5`)
rainfall_totals_may_june_higher %>%
ggplot(aes(Year, delta)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
geom_smooth(method="glm") +
ggtitle("Difference in total rainfall in June compared to May\n(Perth Airport, BOM data)") +
ylab("Difference (mm)") +
dark_theme_bw() +
ylim(-400,400) +
annotate("text", label = "June", x = 1980, y = 300, size = 8) +
annotate("text", label = "May", x = 1980, y = -300, size = 8)
rainfall_totals_june_july_higher <- rainfall_totals %>%
filter(Month > 5, Month < 8) %>%
#cols become Year june july
select(Year, Month, total_rainfall) %>%
pivot_wider(names_from = c(Month), values_from = total_rainfall) %>%
mutate(higher_rain = case_when(
`6` > `7` ~ "June",
`7` > `6` ~ "July",
)) %>%
mutate(higher_rain_ordinal = case_when(
higher_rain == "June" ~ 0,
higher_rain == "July" ~ 1
)) %>%
mutate(delta = `7` - `6`)
rainfall_totals_june_july_higher %>%
ggplot(aes(Year, delta)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
geom_smooth(method="glm") +
ggtitle("Difference in total rainfall in July compared to June\n(Perth Airport, BOM data)") +
ylab("Difference (mm)") +
dark_theme_bw() +
ylim(-400,400) +
annotate("text", label = "July", x = 1980, y = 300, size = 8) +
annotate("text", label = "June", x = 1980, y = -300, size = 8)
rainfall_totals_july_august_higher <- rainfall_totals %>%
filter(Month == 7 | Month == 8) %>%
#cols become Year june july
select(Year, Month, total_rainfall) %>%
pivot_wider(names_from = c(Month), values_from = total_rainfall) %>%
mutate(higher_rain = case_when(
`7` > `8` ~ "July",
`8` > `7` ~ "August"
)) %>%
mutate(higher_rain_ordinal = case_when(
higher_rain == "July" ~ 0,
higher_rain == "August" ~ 1
)) %>%
mutate(delta = `8` - `7`)
rainfall_totals_july_august_higher %>%
ggplot(aes(Year, delta)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed', alpha = 0.8, colour = "red") +
geom_smooth(method="glm") +
ggtitle("Difference in total rainfall in August compared to July\n(Perth Airport, BOM data)") +
ylab("Difference (mm)") +
dark_theme_bw() +
ylim(-400,400) +
annotate("text", label = "August", x = 1980, y = 300, size = 8) +
annotate("text", label = "July", x = 1980, y = -300, size = 8)
